Crea la base de datos videoclub.

    use videoclub


Crea la colección películas.

    db.createCollection("peliculas")


Inserta documentos que representen a películas. Campos a tener en cuenta: título, año de estreno, actores y género.

    > db.peliculas.insert({"titulo" : "Lo que el viento se llevó", "estreno" : 1939, "actores" : ["Clark Gable", "Vivien Leigh"], "genero" : "drama"})
    WriteResult({ "nInserted" : 1 })

    > db.peliculas.insert({"titulo" : "Casablanca", "estreno" : 1939, "actores" : ["Humphrey Bogart", "Ingrid Bergman"], "genero" : "drama"})
    WriteResult({ "nInserted" : 1 })

    > db.peliculas.insert({"titulo" : "Kingsman", "estreno" : 2014, "actores" : ["Colin Firth", "Taron Egerton", "Samuel L. Jackson"], "genero" : "accion"})
    WriteResult({ "nInserted" : 1 })

    > db.peliculas.insert({"titulo" : "Sherlock Holmes", "estreno" : 2009, "actores" : ["Robert Downey Jr.", "Jude Law"], "genero" : "accion"})
    WriteResult({ "nInserted" : 1 })

    > db.peliculas.insert({"titulo" : "500 Days of Summer", "estreno" : 2009, "actores" : ["Zooey Deschanel", "Joseph Gordon-Levitt"], "genero" : "romance"})
    WriteResult({ "nInserted" : 1 })

    > db.peliculas.insert({"titulo" : "Matrix", "estreno" : 1980, "actores" : ["Keanu Reeves", "Laurence Fishburne"], "genero" : "suspense"})
    WriteResult({ "nInserted" : 1 })


Para que la siguiente operación pueda llevarse a cabo, se ha creado una entrada para una película con título 'Matrix'.
Actualizar la película de título "Matrix" con la siguiente información

    > db.peliculas.findOne({"titulo" : "Matrix"})
    {
    	"_id" : ObjectId("593dc3433a54e67513c7d6e6"),
    	"titulo" : "Matrix",
    	"estreno" : 1980,
    	"actores" : [
    		"Keanu Reeves",
    		"Laurence Fishburne"
    	],
    	"genero" : "suspense"
    }

    > db.peliculas.update({"titulo" : "Matrix"}, {"$set" : {"tipo" : "DVD", "estreno" : 1999, "genero" : "accion"}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })


Considerar el libro Constantinopla, y añadirlo a la colección media e incrementar en cinco unidades el valor de la clave leídos.

    > db.createCollection("media")
    { "ok" : 1 }

    > db.media.insert({"tipo" : "libro", "titulo" : "Constantinopla", "capitulos" : 12, "leidos" : 3})
    WriteResult({ "nInserted" : 1 })

    > db.media.findOne({"titulo" : "Constantinopla"})
    {
    	"_id" : ObjectId("593dc3993a54e67513c7d6e7"),
    	"tipo" : "libro",
    	"titulo" : "Constantinopla",
    	"capitulos" : 12,
    	"leidos" : 3
    }

    > db.media.update({"_id" : ObjectId("593dc3993a54e67513c7d6e7")}, {"$inc" : {"leidos" : 3}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })


 Actualizar el documento referido a la película Matrix cambiando el valor de la clave género a ciencia ficción.

    > db.peliculas.findOne({"titulo" : "Matrix"})
    {
    	"_id" : ObjectId("593dc3433a54e67513c7d6e6"),
    	"titulo" : "Matrix",
    	"estreno" : 1999,
    	"actores" : [
    		"Keanu Reeves",
    		"Laurence Fishburne"
    	],
    	"genero" : "accion",
    	"tipo" : "DVD"
    }

    > db.peliculas.update({"_id" : ObjectId("593dc3433a54e67513c7d6e6")}, {"$set" : {"genero" : "ciencia ficcion"}})


Actualizar el documento referido a la película Matrix añadiendo al array actores los valores de Antonio Banderas y Brad Pitt en una única operación.

    > db.peliculas.update({"_id" : ObjectId("593dc3433a54e67513c7d6e6")}, {"$push" : {"actores" : {"$each" : ["Antonio Banderas", "Brad Pitt"]}}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

    > db.peliculas.findOne({"_id" : ObjectId("593dc3433a54e67513c7d6e6")})
    {
    	"_id" : ObjectId("593dc3433a54e67513c7d6e6"),
    	"titulo" : "Matrix",
    	"estreno" : 1999,
    	"actores" : [
    		"Keanu Reeves",
    		"Laurence Fishburne",
    		"Antonio Banderas",
    		"Brad Pitt"
    	],
    	"genero" : "ciencia ficcion",
    	"tipo" : "DVD"
    }


Actualizar el documento referido a la película Matrix añadiendo al array actores los valores Joe Pantoliano, Brad Pitt y Natalie Portman.

    > db.peliculas.update({"_id" : ObjectId("593dc3433a54e67513c7d6e6")}, {"$push" : {"actores" : {"$each" : ["Joe Pantoliano", "Natalie Portman"]}}})

    NO ES LA FORMA MÁS CORRECTA DE HACERLO.


Actualizar el documento de la película Matrix eliminando del array el primer y último actor.

    > db.peliculas.update({"_id" : ObjectId("593dc3433a54e67513c7d6e6")}, {"$pop" : {"actores" : 1}})

    > db.peliculas.update({"_id" : ObjectId("593dc3433a54e67513c7d6e6")}, {"$pop" : {"actores" : -1}})

    NO ES LA FORMA MÁS CORRECTA DE HACERLO.


Actualizar el documento referido a la película "Matrix" eliminado todas las apariciones en el array "actores" de los valores "Joe Pantoliano" y "Antonio Banderas".

    > db.peliculas.update({"_id" : ObjectId("593dc3433a54e67513c7d6e6")}, {"$pull" : {"actores" : {"$in" : ["Joe Pantoliano", "Antonio Banderas"]}}})
    {
    	"_id" : ObjectId("593dc3433a54e67513c7d6e6"),
    	"titulo" : "Matrix",
    	"estreno" : 1999,
    	"actores" : [
    		"Laurence Fishburne",
    		"Brad Pitt"
    	],
    	"genero" : "ciencia ficcion",
    	"tipo" : "DVD"
    }


Actualizar el documento referido al disco "Recuerdos" y añadir una nueva canción al array "canciones".

    > db.createCollection("musica")
    { "ok" : 1 }

    > db.musica.insert({"album" : "Recuerdos"})
    WriteResult({ "nInserted" : 1 })

    > db.musica.findOne({"album" : "Recuerdos"})
    { "_id" : ObjectId("593e6d90bfc43260f02308f6"), "album" : "Recuerdos" }

    > db.musica.update({"album" : "Recuerdos"}, {"$push" : {"canciones" : {"cancion" : 5, "titulo" : "El atardecer", "logitud" : "6:50"}}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

    > db.musica.findOne({"album" : "Recuerdos"})
    {
    	"_id" : ObjectId("593e6d90bfc43260f02308f6"),
    	"album" : "Recuerdos",
    	"canciones" : [
    		{
    			"cancion" : 5,
    			"titulo" : "El atardecer",
    			"longitud" : "6:50"
    		}
    	]
    }


Actualizar el documento referido al disco "Recuerdos" de manera que la canción "El atardecer" tenga asignado el número 3 en vez de 5.

    > db.musica.update({"album" : "Recuerdos", "canciones" : {"$elemMatch" : {"titulo" : "El atardecer"}}}, {"$set" : {"canciones.0.cancion" : 3}})

    // MUY IMPORTANTE: si queremos actualizar la info de un campo dentro de un documento embebido dentro de un array
    // (sí, es un ejercicio un poco complejo) debemos usar un $-based-array, especialmente si la condición para modificar
    // un campo del documento embebido en el array es una comparación con otro campo de dicho documento.

    // Pero si por ejemplo queremos cambiar el título de la canción que tiene el valor del campo 'cancion' igual a 4,
    // debemos establecer la condición con la máxima exactitud posible gracias a $elemMatch. Primero vamos a insertar
    // una canción más en el array 'canciones' del álbum Recuerdos

    > db.musica.update({"album" : "Recuerdos"}, {"$push" : {"canciones" : {"cancion" : 4, "titulo" : "Aserejé", "longitud" : "3:20"}}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

    > db.musica.findOne({"album" : "Recuerdos"})
    {
    	"_id" : ObjectId("593e6d90bfc43260f02308f6"),
    	"album" : "Recuerdos",
    	"canciones" : [
    		{
    			"cancion" : 3,
    			"titulo" : "El atardecer",
    			"logitud" : "6:50"
    		},
    		{
    			"cancion" : 4,
    			"titulo" : "Aserejé",
    			"longitud" : "3:20"
    		}
    	]
    }

    > db.musica.update({"album" : "Recuerdos", "canciones" : {"$elemMatch" : {"cancion" : 4}}}, {"$set" : {"canciones.$.titulo" : "Una vaina loca"}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

    > db.musica.findOne({"album" : "Recuerdos"})
    {
    	"_id" : ObjectId("593e6d90bfc43260f02308f6"),
    	"album" : "Recuerdos",
    	"canciones" : [
    		{
    			"cancion" : 3,
    			"titulo" : "El atardecer",
    			"logitud" : "6:50"
    		},
    		{
    			"cancion" : 4,
    			"titulo" : "Una vaina loca",
    			"longitud" : "3:20"
    		}
    	]
    }


----------------------------------------------------------------

Comando muy útil si la lio insertando datos:

    > var x = db.mycollection.findOne({"title" : "Titulo"})

    > delete x.entrada

    > db.mycollection.update({"title" : "Titulo"}, x);

    > db.mycollection.findOne({"title" : "Titulo"})


----------------------------------------------------------------

Para eliminar una colección (equivalente a una tabla en SQL) por completo:

    > db.mycollection.drop()


Por otro lado, para eliminar todos los documentos de una colección en la que se cumpla una condición sobre un campo de dicho documento:

    > db.mycollection.remove({"campo" : true})
